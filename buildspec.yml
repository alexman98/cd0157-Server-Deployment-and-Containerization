---
version: 0.2


phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
      - echo 'Starting Docker daemon...'
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"

      # Download and configure aws-iam-authenticator
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator

      # Install kubectl (version v1.27.9 â€” matching EKS cluster version 1.28)
      - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.9/2024-01-04/bin/linux/amd64/kubectl
      - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.9/2024-01-04/bin/linux/amd64/kubectl.sha256
      - sha256sum -c kubectl.sha256
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD:$PATH
      - echo 'export PATH=$PWD:$PATH' >> ~/.bashrc
      - echo $(kubectl version --client)

      # Upgrade pip
      - python -m pip install --upgrade --force pip

      # Fix Amazon Corretto GPG key issue
      - echo "Fixing Corretto GPG key"
      - curl -L https://apt.corretto.aws/corretto.key | gpg --dearmor -o /usr/share/keyrings/corretto.gpg
      - grep -v "apt.corretto.aws" /etc/apt/sources.list > /etc/apt/sources.list.tmp && mv /etc/apt/sources.list.tmp /etc/apt/sources.list
      - echo "deb [signed-by=/usr/share/keyrings/corretto.gpg] https://apt.corretto.aws stable main" > /etc/apt/sources.list.d/corretto.list

      # Update apt and install packages
      - sed -i '/dl.google.com/d' /etc/apt/sources.list || true
      - rm -f /etc/apt/sources.list.d/google-chrome.list || true
      - apt-get update
      - apt-get -y install jq

      # Install Python requirements
      - pip install --upgrade awscli pytest
  pre_build:
    commands:
      - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' simple_jwt_api.yml
      - $(aws ecr get-login --no-include-email)
      - export KUBECONFIG=$HOME/.kube/config
      - echo `ls -l`
      - pip install -r requirements.txt
      - python -m pytest test_main.py
  build:
    commands:
      - docker build --tag $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - docker push $REPOSITORY_URI:$TAG
      - echo $EKS_CLUSTER_NAME
      - echo $EKS_KUBECTL_ROLE_ARN
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --role-arn $EKS_KUBECTL_ROLE_ARN
      - kubectl apply -f simple_jwt_api.yml 
      - printf '[{"name":"simple_jwt_api","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
artifacts:
  files: build.json
env:
  parameter-store:         
    JWT_SECRET: JWT_SECRET
